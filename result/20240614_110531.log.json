{"pyskl_version": "0.1.006bc116", "config": "model = dict(\n    type='RecognizerGCN',\n    backbone=dict(\n        type='STGCN',\n        gcn_adaptive='init',\n        gcn_with_res=True,\n        tcn_type='mstcn',\n        graph_cfg=dict(layout='coco', mode='spatial')),\n    cls_head=dict(type='GCNHead', num_classes=10, in_channels=256))\ndataset_type = 'PoseDataset'\nann_file = 'C:/Users/Administrator/Desktop/pyspace/pyskl-main/data/Weizmann/Wei_xsub_stgn++.pkl'\ntrain_pipeline = [\n    dict(type='PreNormalize2D'),\n    dict(type='GenSkeFeat', dataset='coco', feats=['j']),\n    dict(type='UniformSample', clip_len=100),\n    dict(type='PoseDecode'),\n    dict(type='FormatGCNInput', num_person=1),\n    dict(type='Collect', keys=['keypoint', 'label'], meta_keys=[]),\n    dict(type='ToTensor', keys=['keypoint'])\n]\nval_pipeline = [\n    dict(type='PreNormalize2D'),\n    dict(type='GenSkeFeat', dataset='coco', feats=['j']),\n    dict(type='UniformSample', clip_len=100, num_clips=1),\n    dict(type='PoseDecode'),\n    dict(type='FormatGCNInput', num_person=1),\n    dict(type='Collect', keys=['keypoint', 'label'], meta_keys=[]),\n    dict(type='ToTensor', keys=['keypoint'])\n]\ntest_pipeline = [\n    dict(type='PreNormalize2D'),\n    dict(type='GenSkeFeat', dataset='coco', feats=['j']),\n    dict(type='UniformSample', clip_len=100, num_clips=10),\n    dict(type='PoseDecode'),\n    dict(type='FormatGCNInput', num_person=1),\n    dict(type='Collect', keys=['keypoint', 'label'], meta_keys=[]),\n    dict(type='ToTensor', keys=['keypoint'])\n]\ndata = dict(\n    videos_per_gpu=16,\n    workers_per_gpu=2,\n    test_dataloader=dict(videos_per_gpu=1),\n    train=dict(\n        type='RepeatDataset',\n        times=5,\n        dataset=dict(\n            type='PoseDataset',\n            ann_file=\n            'C:/Users/Administrator/Desktop/pyspace/pyskl-main/data/Weizmann/Wei_xsub_stgn++.pkl',\n            pipeline=[\n                dict(type='PreNormalize2D'),\n                dict(type='GenSkeFeat', dataset='coco', feats=['j']),\n                dict(type='UniformSample', clip_len=100),\n                dict(type='PoseDecode'),\n                dict(type='FormatGCNInput', num_person=1),\n                dict(type='Collect', keys=['keypoint', 'label'], meta_keys=[]),\n                dict(type='ToTensor', keys=['keypoint'])\n            ],\n            split='xsub_train',\n            test_mode=False)),\n    val=dict(\n        type='PoseDataset',\n        ann_file=\n        'C:/Users/Administrator/Desktop/pyspace/pyskl-main/data/Weizmann/Wei_xsub_stgn++.pkl',\n        pipeline=[\n            dict(type='PreNormalize2D'),\n            dict(type='GenSkeFeat', dataset='coco', feats=['j']),\n            dict(type='UniformSample', clip_len=100, num_clips=1),\n            dict(type='PoseDecode'),\n            dict(type='FormatGCNInput', num_person=1),\n            dict(type='Collect', keys=['keypoint', 'label'], meta_keys=[]),\n            dict(type='ToTensor', keys=['keypoint'])\n        ],\n        split='xsub_val'),\n    test=dict(\n        type='PoseDataset',\n        ann_file=\n        'C:/Users/Administrator/Desktop/pyspace/pyskl-main/data/Weizmann/Wei_xsub_stgn++.pkl',\n        pipeline=[\n            dict(type='PreNormalize2D'),\n            dict(type='GenSkeFeat', dataset='coco', feats=['j']),\n            dict(type='UniformSample', clip_len=100, num_clips=10),\n            dict(type='PoseDecode'),\n            dict(type='FormatGCNInput', num_person=1),\n            dict(type='Collect', keys=['keypoint', 'label'], meta_keys=[]),\n            dict(type='ToTensor', keys=['keypoint'])\n        ],\n        split='xsub_val'))\noptimizer = dict(\n    type='SGD', lr=0.1, momentum=0.9, weight_decay=0.0005, nesterov=True)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(policy='CosineAnnealing', min_lr=0, by_epoch=False)\ntotal_epochs = 2\ncheckpoint_config = dict(interval=1)\nevaluation = dict(interval=1, metrics=['top_k_accuracy', 'loss_cls', 'loss'])\nlog_config = dict(interval=100, hooks=[dict(type='TextLoggerHook')])\nlog_level = 'INFO'\nwork_dir = 'C://Users//Administrator//Desktop//pyspace//pyskl-main//result'\ndist_params = dict(backend='gloo')\ngpu_ids = range(0, 1)\nseed = 642048780\nworkflow = [('train', 1)]\n", "env_info": "sys.platform: win32\nPython: 3.12.3 | packaged by Anaconda, Inc. | (main, May  6 2024, 19:42:21) [MSC v.1916 64 bit (AMD64)]\nCUDA available: True\nGPU 0: NVIDIA GeForce GTX 1660\nCUDA_HOME: C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v12.2\nNVCC: Cuda compilation tools, release 12.2, V12.2.140\nMSVC: x64  Microsoft (R) C/C++ \u017b 19.40.33811\nGCC: n/a\nPyTorch: 2.2.2+cu121\nPyTorch compiling details: PyTorch built with:\n  - C++ Version: 201703\n  - MSVC 192930151\n  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v3.3.2 (Git Hash 2dc95a2ad0841e29db8b22fbccaf3e5da7992b01)\n  - OpenMP 2019\n  - LAPACK is enabled (usually provided by MKL)\n  - CPU capability usage: AVX512\n  - CUDA Runtime 12.1\n  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90\n  - CuDNN 8.8.1  (built against CUDA 12.0)\n  - Magma 2.5.4\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=8.8.1, CXX_COMPILER=C:/actions-runner/_work/pytorch/pytorch/builder/windows/tmp_bin/sccache-cl.exe, CXX_FLAGS=/DWIN32 /D_WINDOWS /GR /EHsc /Zc:__cplusplus /bigobj /FS /utf-8 -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE /wd4624 /wd4068 /wd4067 /wd4267 /wd4661 /wd4717 /wd4244 /wd4804 /wd4273, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.2.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=OFF, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, \n\nTorchVision: 0.17.2+cu121\nOpenCV: 4.10.0\nMMCV: 1.5.0\nMMCV Compiler: MSVC 194033811\nMMCV CUDA Compiler: 12.2\npyskl: 0.1.0+06bc116", "seed": 642048780, "config_name": "j.py", "work_dir": "result", "hook_msgs": {}, "epoch": 1, "iter": 19, "mmcv_version": "1.5.0", "time": "Fri Jun 14 11:05:00 2024"}
